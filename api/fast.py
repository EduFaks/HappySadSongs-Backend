from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from happysadsongs.predict import *
from simpletransformers.classification import ClassificationModel

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # Allows all origins
    allow_credentials=True,
    allow_methods=["*"],  # Allows all methods
    allow_headers=["*"],  # Allows all headers
)


@app.get("/")
def index():
    return {"greeting": "Hello world"}


@app.get("/predict")
def predict_parts(lyric):
    """Cleans input lyric with standard preprocess stepps. Then runs model
    prediction on each 20-word segment generated by get_split function and
    finally returns mode of preds.
    Note: returns 1 (highest value) if equal number of 0 and 1 predictions"""
    lyric_parts = get_split(clean(lyric))
    model = ClassificationModel('roberta',
                                'raw_data/twoclass_roberta_bin',
                                use_cuda=False)
    preds = model.predict(lyric_parts)[0]
    try:
        return {'prediction': int(mode(preds))}
    except:
        return {'prediction': 1}
